[{"path":[]},{"path":"https://epiforesite.github.io/branding-package/articles/Accessibility-Guidelines.html","id":"principles","dir":"Articles","previous_headings":"General Design Principles for Accessibility","what":"Principles","title":"Accessibility-Guidelines","text":"Use descriptive alt text non-text content Avoid using color convey meaning Ensure sufficient contrast text UI elements Ensure functions keyboard-accessible Provide clear focus indicators Avoid time-limited interactions unless necessary Use consistent layout predictable navigation Group related controls landmarks (e.g., <main>, <nav>) Use headings (<h1>–<h6>) meaningfully hierarchically Provide downloadable raw data visualizations Use accessible HTML tables present data possible Include text summaries visualizations Reuse layouts component patterns Ensure button/tab behaviors predictable Avoid keyboard traps focus loops","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://epiforesite.github.io/branding-package/articles/Accessibility-Guidelines.html","id":"testing-tools","dir":"Articles","previous_headings":"","what":"Testing Tools","title":"Accessibility-Guidelines","text":"free, widely available tools can use evaluate accessibility dashboards: axe DevTools Browser Extension: Runs automated scans developer tools flag WCAG issues suggest fixes right browser. WAVE Browser Extension: Adds ‑page overlay visually marks accessibility errors, alerts, structural cues quick review. WebAIM Contrast Checker: Tests foreground‑background color pair confirm meets WCAG AA/AAA contrast ratios. addition automated tools, always perform manual checks screen reader. Popular options include VoiceOver (macOS/iOS), NVDA (Windows), JAWS (Windows).","code":""},{"path":"https://epiforesite.github.io/branding-package/articles/quarto-templates.html","id":"rmark-a-simple-r-markdown-template-for-one-page-pdf-or-html-reports","dir":"Articles","previous_headings":"","what":"rmark: A simple r markdown template for one-page pdf or html reports","title":"Quarto templates","text":"Install :","code":"rbranding::get_template(\"rmark\")"},{"path":"https://epiforesite.github.io/branding-package/articles/quarto-templates.html","id":"qwebsite-a-simple-website-template-for-quarto","dir":"Articles","previous_headings":"","what":"qwebsite: A simple website template for quarto","title":"Quarto templates","text":"Install :","code":"rbranding::get_template(\"qwebsite\")"},{"path":"https://epiforesite.github.io/branding-package/articles/rbranding.html","id":"in-the-r-console","dir":"Articles","previous_headings":"","what":"In the R console:","title":"rbranding","text":"Install package github (necessary):","code":"#In the r terminal: #Install the package from github (if necessary): >devtools::install_github(\"rbranding/rbranding\") #load the library: >library(rbranding)  #Initialize the rbranding package: >rbranding::init_rbranding()  #get the latest version of the _brand.yml file: >rbranding::get_brand_yaml()  #install the example1 template: >rbranding::install_template(\"example1\")"},{"path":"https://epiforesite.github.io/branding-package/articles/shiny-templates.html","id":"example-1-map-and-table-with-links-to-details","dir":"Articles","previous_headings":"","what":"Example 1: Map and Table with links to details","title":"Shiny Templates","text":"Install :","code":"rbranding::get_template(\"example1\")"},{"path":"https://epiforesite.github.io/branding-package/articles/shiny-templates.html","id":"example-2-histogram-with-controls-on-the-left","dir":"Articles","previous_headings":"","what":"Example 2: Histogram with controls on the left","title":"Shiny Templates","text":"Install :","code":"rbranding::get_template(\"shiny2\")"},{"path":"https://epiforesite.github.io/branding-package/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Willy Ray. Author, maintainer.","code":""},{"path":"https://epiforesite.github.io/branding-package/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ray W (2025). rbranding: Package (Title Case). R package version 0.1.0, https://epiforesite.github.io/branding-package/.","code":"@Manual{,   title = {rbranding: What the Package Does (Title Case)},   author = {Willy Ray},   year = {2025},   note = {R package version 0.1.0},   url = {https://epiforesite.github.io/branding-package/}, }"},{"path":"https://epiforesite.github.io/branding-package/index.html","id":"branding-package","dir":"","previous_headings":"","what":"What the Package Does (Title Case)","title":"What the Package Does (Title Case)","text":"Facilitate creation Shiny apps CFA projects conform STLTs’ branding design standards, automatically provide much accessibility ForeSITE Shiny apps possible.","code":""},{"path":"https://epiforesite.github.io/branding-package/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"What the Package Does (Title Case)","text":"branding-package helps R developers quickly build Shiny applications visually consistent, accessible, easy maintain. provides tools manage branding assets, apply organization-wide themes, streamline setup new projects.","code":""},{"path":"https://epiforesite.github.io/branding-package/index.html","id":"project-features-and-aspirations","dir":"","previous_headings":"","what":"Project Features and aspirations","title":"What the Package Does (Title Case)","text":"Branding File Management: Download, update, validate branding YAML files consistent theming. Shiny App Templates: Quickly scaffold Shiny apps follow best practices branding accessibility. Accessibility: Built-support accessible color palettes UI components. Integration: Easily integrates bslib, thematic, modern R packages.","code":""},{"path":"https://epiforesite.github.io/branding-package/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (Title Case)","text":"Note: brand_init() get_brand() intended run interactively R console, inside scripts. Load branding YAML apply theme UI/server code.","code":"# Install from GitHub (if not on CRAN) remotes::install_github(\"EpiForeSITE/branding-package\")  # Initialize branding config (run in the R console) library(rbranding) brand_init() # You may edit the generated config.yml file if necessary.  # Update or fetch the latest branding file (run in the R console) get_brand()"},{"path":"https://epiforesite.github.io/branding-package/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"What the Package Does (Title Case)","text":"Function documentation available via ?get_brand ?brand_init loading package. See pkgdown site full reference vignettes.","code":""},{"path":"https://epiforesite.github.io/branding-package/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"What the Package Does (Title Case)","text":"Pull requests issues welcome! Please see CONTRIBUTING.md guidelines.","code":""},{"path":"https://epiforesite.github.io/branding-package/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"What the Package Does (Title Case)","text":"MIT","code":""},{"path":"https://epiforesite.github.io/branding-package/reference/brand_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize Branding Config — brand_init","title":"Initialize Branding Config — brand_init","text":"Initializes branding creating config.yml file remote local file paths, placeholder _brand.yml file.","code":""},{"path":"https://epiforesite.github.io/branding-package/reference/brand_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize Branding Config — brand_init","text":"","code":"brand_init()"},{"path":"https://epiforesite.github.io/branding-package/reference/brand_init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize Branding Config — brand_init","text":"return value. Side effects: creates config.yml _brand.yml.","code":""},{"path":"https://epiforesite.github.io/branding-package/reference/brand_init.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialize Branding Config — brand_init","text":"function intended run set configuration branding file management.","code":""},{"path":"https://epiforesite.github.io/branding-package/reference/brand_init.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize Branding Config — brand_init","text":"","code":"brand_init()"},{"path":"https://epiforesite.github.io/branding-package/reference/get_brand.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Latest Branding File — get_brand","title":"Get the Latest Branding File — get_brand","text":"Downloads latest _brand.yml file repository compares local _brand.yml file. different, prompts user overwrite local file. local file exist, created.","code":""},{"path":"https://epiforesite.github.io/branding-package/reference/get_brand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Latest Branding File — get_brand","text":"","code":"get_brand()"},{"path":"https://epiforesite.github.io/branding-package/reference/get_brand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Latest Branding File — get_brand","text":"return value. Side effects: may overwrite _brand.yml create bak_brand.yml.","code":""},{"path":"https://epiforesite.github.io/branding-package/reference/get_brand.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the Latest Branding File — get_brand","text":"Reads configuration config.yml. Handles download errors file comparison using MD5 hashes. Prompts user action files differ.","code":""},{"path":"https://epiforesite.github.io/branding-package/reference/get_brand.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Latest Branding File — get_brand","text":"","code":"# Initialize config and local brand file brand_init() # Update local brand file if needed get_brand() #> Checking remote version...  #> The local file is different from the remote file. #> 1: Overwrite the local file with the remote file #> 2: Overwrite the local file with the remote file and save a backup to bak_brand.yml #> 3: Do nothing #>  #> Please Select an option: (1/2/3):  #>"},{"path":"https://epiforesite.github.io/branding-package/reference/get_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Shiny Templates Copy Example App Files from inst/examples to inst/app — get_template","title":"Get Shiny Templates Copy Example App Files from inst/examples to inst/app — get_template","text":"Get Shiny Templates Copy Example App Files inst/examples inst/app","code":""},{"path":"https://epiforesite.github.io/branding-package/reference/get_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Shiny Templates Copy Example App Files from inst/examples to inst/app — get_template","text":"","code":"get_template(example_name)"},{"path":"https://epiforesite.github.io/branding-package/reference/get_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Shiny Templates Copy Example App Files from inst/examples to inst/app — get_template","text":"example_name Name example folder inst/examples","code":""},{"path":"https://epiforesite.github.io/branding-package/reference/link_leaflet_dt.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a two-way link between a Leaflet map and a DT datatable. — link_leaflet_dt","title":"Create a two-way link between a Leaflet map and a DT datatable. — link_leaflet_dt","text":"function sets observers : Clicking marker Leaflet map select corresponding row DT table. Selecting row DT table highlight corresponding marker Leaflet map fly map marker.","code":""},{"path":"https://epiforesite.github.io/branding-package/reference/link_leaflet_dt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a two-way link between a Leaflet map and a DT datatable. — link_leaflet_dt","text":"","code":"link_leaflet_dt(   input,   session,   leaflet_output_id,   dt_output_id,   shared_id_column,   leaflet_data_reactive,   dt_data_reactive,   map_lng_col = \"longitude\",   map_lat_col = \"latitude\",   highlight_zoom = 12,   highlight_icon = leaflet::awesomeIcons(icon = \"star\", library = \"glyphicon\",     markerColor = \"red\", iconColor = \"#FFFFFF\") )"},{"path":"https://epiforesite.github.io/branding-package/reference/link_leaflet_dt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a two-way link between a Leaflet map and a DT datatable. — link_leaflet_dt","text":"input Shiny input object server function. session Shiny session object server function. leaflet_output_id character string: outputId leafletOutput. Example: \"myMap\". dt_output_id character string: outputId DT::DTOutput. Example: \"myTable\". shared_id_column character string: name column present Leaflet data DT data. column must contain unique identifiers item. creating Leaflet map, ensure set layerId markers (shapes) values column. Example: addMarkers(..., layerId = ~my_unique_id_column). leaflet_data_reactive reactive expression returns data frame used generate Leaflet map. data frame MUST contain shared_id_column columns specified map_lng_col map_lat_col. Example: reactive({ my_spatial_data_frame }). dt_data_reactive reactive expression returns data frame displayed DT table. data frame MUST contain shared_id_column. Example: reactive({ my_table_data_frame }). map_lng_col (Optional) character string: name column leaflet_data_reactive contains longitude values map markers. Defaults \"longitude\". map_lat_col (Optional) character string: name column leaflet_data_reactive contains latitude values map markers. Defaults \"latitude\". highlight_zoom (Optional) integer: zoom level map fly marker highlighted. Defaults 12. highlight_icon (Optional) icon object created leaflet::awesomeIcons() (leaflet::makeAwesomeIcon(), leaflet::icons()) use highlighted marker map. Defaults red star icon.","code":""},{"path":"https://epiforesite.github.io/branding-package/reference/link_leaflet_dt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a two-way link between a Leaflet map and a DT datatable. — link_leaflet_dt","text":"function return value. called side effects, set reactive observers link map table.","code":""},{"path":"https://epiforesite.github.io/branding-package/reference/link_leaflet_dt.html","id":"important-notes-for-users","dir":"Reference","previous_headings":"","what":"Important Notes for Users","title":"Create a two-way link between a Leaflet map and a DT datatable. — link_leaflet_dt","text":"layerId Crucial: map--table link work, Leaflet markers (circles, polygons, etc.) must layerId aesthetic mapped shared_id_column. example: leaflet() %>% addMarkers(data = my_data, layerId = ~my_id_column, ...) Unique IDs: values shared_id_column unique location/item ensure correct linking. Data Reactivity: leaflet_data_reactive dt_data_reactive must reactive expressions (e.g., created reactive({...})). allows linking work even underlying data changes. DT Selection Mode: best results, set DT table single row selection: DT::datatable(..., selection = 'single'). function currently focuses first selected row multiple somehow selected.","code":""},{"path":"https://epiforesite.github.io/branding-package/reference/link_leaflet_dt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a two-way link between a Leaflet map and a DT datatable. — link_leaflet_dt","text":"","code":"if (FALSE) { # \\dontrun{   # Running an app we have included in the package   fn_app <- system.file(     \"examples\", \"link_plots.R\",     package = \"rbranding\"   )    shiny::runApp(fn_app) } # }"}]
